backend_user_employee_index:
    path: /
    methods: [GET]
    defaults:
        _controller: tianos.backend.controller.user:indexAction
        _tianos:
            action: index
            section: admin
            permission: true
            template: GridBundle::index.html.twig
            roles_granted:
                - ROLE_EMPLOYEE_VIEW
            vars:
                subheader: sylius.ui.manage_your_user_catalog
                icon: cube
                body_css: grid-body-css
            grid:
                icon: user
                box_class: primary
                title: Listado de empleados
                modal:
                    create:
                        title: Crear empleado
                        size: modal-lg
                    edit:
                        title: Editar empleado
                        size: modal-lg
                    view:
                        title: Ver empleado
                        size: modal-lg
                    change_password:
                        title: Cambiar password
                data_table:
                    route:
                        info: backend_user_employee_info
                        view: backend_user_employee_view
                        edit: backend_user_employee_edit
                        create: backend_user_employee_create
                        delete: backend_user_employee_delete
                        view_profile: backend_user_profile
                        change_password: backend_user_change_password
                    table_button:
                        #- edit
                        #- delete
                        #- view_profile
                        #- change_password
                    table_option:
                        pageLength: 50
                        dom: "'<\"top\"iflp><\"clear\">rt<\"bottom\"iflp>'"
                    table_button_header:
                        - create
                        - info
                    row_call_back:
                        - key: id
                          value: aData.id
                        - key: data-id
                          value: aData.id
                        - key: data-slug
                          value: aData.slug
                        - key: class
                          value: "'alert'"
                    columns:
                        - obj: " '<span class=\"badge bg-blue\">' + obj.id + '</span>' "
                          defs:
                              targets: 0
                              searchable: 1
                              sorting: 1
                              orderable: 1
                              type: num
                              width: 4%
                              title: '#'
                              className: modal-view text-center
                        - obj: " obj.name + ' ' + obj.last_name "
                          defs:
                              targets: 1
                              orderable: 1
                              sorting: 1
                              title: Nombre
                              className: modal-edit
                              filter: 1
                        - obj: obj.email
                          defs:
                              targets: 2
                              title: '<i class="fa fa-fw fa-envelope-o"></i> Email'
                              filter: 1
                        - obj: " '<span class=\"badge bg-green\">' + obj.username + '</span>' "
                          defs:
                              targets: 3
                              title: '<i class="fa fa-fw fa-feed"></i> Username'
                              className: text-center
                              filter: 1
                        - obj: obj.created_at
                          defs:
                              targets: 4
                              title: '<i class="fa fa-fw fa-calendar"></i> Usuario desde'
                              className: text-center
                        - obj: " '<button class=\"btn btn-xs bg-olive\"><i class=\"fa fa-fw fa-user\"></i></button>' "
                          defs:
                              targets: 5
                              title: Perfil
                              width: 4%
                              sorting: 0
                              orderable: 0
                              className: profile-button-id text-center
                        - obj: " '<button class=\"btn btn-xs btn-info\"><i class=\"fa fa-fw fa-lock\"></i></button>' "
                          defs:
                              targets: 6
                              title: Password
                              width: 4%
                              sorting: 0
                              orderable: 0
                              className: change-password-id text-center
                        - obj: " '<button class=\"btn btn-xs btn-danger\"><i class=\"fa fa-fw fa-trash\"></i></button>' "
                          defs:
                              targets: 7
                              title: Eliminar
                              width: 4%
                              sorting: 0
                              orderable: 0
                              className: modal-delete text-center
            form:
                type: Bundle\UserBundle\Form\Type\UserEmployeeType
            repository:
                service: tianos.repository.user
                method: findAllEmployee
                arguments: [$userId]
                vars:
                    serialize_group_name: crud

backend_user_employee_create:
    path: /create
    methods: [POST]
    defaults:
        _controller: tianos.backend.controller.user:createAction
        _tianos:
            action: create
            template: UserBundle:Backend/Form:form.html.twig
            entity: Bundle\UserBundle\Entity\User
            roles_granted:
                - ROLE_EMPLOYEE_CREATE
            form:
                type: Bundle\UserBundle\Form\Type\UserEmployeeType
            repository:
                vars:
                    serialize_group_name: crud

backend_user_employee_edit:
    path: /edit
    methods: [PUT, POST]
    defaults:
        _controller: tianos.backend.controller.user:editAction
        _tianos:
            action: edit
            template: UserBundle:Backend/Form:form.html.twig
            roles_granted:
                - ROLE_EMPLOYEE_EDIT
            form:
                type: Bundle\UserBundle\Form\Type\UserEmployeeType
            repository:
                service: tianos.repository.user
                method: find
                arguments: [$roleId]
                vars:
                    serialize_group_name: crud

backend_user_employee_delete:
    path: /delete
    methods: [POST, DELETE]
    defaults:
        _controller: tianos.backend.controller.user:deleteAction
        _tianos:
            action: delete
            template: GridBundle:Template:delete.html.twig
            roles_granted:
                - ROLE_EMPLOYEE_DELETE
            repository:
                service: tianos.repository.user
                method: find
                arguments: [$roleId]
            vars:
#                body_css: grid-body-css

backend_user_employee_view:
    path: /view
    methods: [POST]
    defaults:
        _controller: tianos.backend.controller.user:viewAction
        _tianos:
            action: view
            template: UserBundle:Backend/Informative:view_employee.html.twig
            roles_granted:
                - ROLE_EMPLOYEE_VIEW
            repository:
                service: tianos.repository.user
                method: find
                arguments: [$userId]
                vars:
                    serialize_group_name: crud

backend_user_employee_info:
    path: /info
    methods: [POST]
    defaults:
        _controller: tianos.backend.controller.user:infoAction
        _tianos:
            action: info
            template: UserBundle:UserBackend/Informative:info.html.twig

